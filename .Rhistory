swirl()
library(swirl)
swirl()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
FALSE & FALSE
FALSE && FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,FALSE, FALSE)
TRUE || c(TRUE,FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
quit()
library(swirl)
swirl()
2
quit
quit()
library(swirl)
swirl()
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
unique_vals <- sapply(flags,unique)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags,class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
library(datasets)
data(iris)
?iris
head(iris)
tapply(iris$Species,iris$Sepal.Length,mean)
irisv <- subset.data.frame(iris,species='virginica')
irisv
mean(iris$Sepal.Length,na.rm = TRUE)
round(mean(iris$Sepal.Length,na.rm = TRUE))
iris_dt <- as.data.table(iris)
data(iris)
iris[species == 'virginica',round(mean(iris$Sepal.Length,na.rm = TRUE))]
irisv <- subset.data.frame(iris,species=='virginica')
irisv <- subset.data.frame(iris,species =='virginica')
iris$Species
irisv <- subset.data.frame(iris,Species =='virginica')
irisv
irisv$Species
round(mean(irisv$Sepal.Length,na.rm = TRUE))
mean(irisv$Sepal.Length,na.rm = TRUE)
?apply
apply(iris[,1:4],1,mean)
apply(iris[,1:4],2,mean)
data("mtcars")
?mtcars
dim(mtcars)
mean(mtcars$mpg,mtcars$cyl)
sapply(mtcars,cyl,mean)
with(mtcars,tapply(mpg,cyl,mean))
?with
unique(mtcars,mpg)
unique(mtcars$mpg)
unique(mtcars$cyl)
tapply(mtcars$mpg,mtcars$cyl,mean)
lapply(mtcars,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
split(mtcars,mtcars$cyl)
apply(mtcars,2,mean)
colnames(mtcars)
mtcarsavg4 <- subset.data.frame(mtcars,cyl == 4)
mtcarsavg4
mtcarsavg8 <- subset.data.frame(mtcars,cyl == 8)
average(mtcarsavg4)
avg(mtcarsavg4)
round(mean(mtcarsavg4$hp) - mean(mtcarsavg8$hp))
mtcars-dt <- as.data.frame(mtcars)
mtcars_dt <- as.data.frame(mtcars)
debug(ls)
ls
0
quit
1
ok()
quit()
